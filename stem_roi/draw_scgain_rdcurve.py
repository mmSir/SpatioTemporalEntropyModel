import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import os
import imageio
import cv2
import numpy as np
from mplfonts import use_font
from matplotlib import rcParams


prefix = 'Kodak_Results'
font = {'family': 'serif', 'weight': 'normal', 'size': 9}
matplotlib.rc('font', **font)
plt.rcParams["font.sans-serif"]=["SimHei"] #设置字体
plt.rcParams["axes.unicode_minus"]=False #该语句解决图像中的“-”负号的乱码问题
use_font('Noto Serif CJK SC')#指定中文字体
config = {
    "font.family":'serif',
    "font.size": 10.5,
    "mathtext.fontset":'stix',
    "font.serif": ['SimSun'],
}
rcParams.update(config)
LineWidth = 2
MarkerSize = 4

bpp = [0.023778 , 0.028261 , 0.034131 , 0.041103 , 0.049042 , 0.058963 , 0.070547 , 0.083888 , 0.100428 , 0.117291 , 0.138370 , 0.161282 , 0.189494 , 0.219051 , 0.256016 , 0.294495 , 0.338370 , 0.385684 , 0.440687 , 0.500803 , 0.569223 , 0.642459 , 0.711308 , 0.795128 , 0.884535 , 0.977693 , 1.083310 , 1.193119 , 1.302428 , 1.425981 ]
psnr = [23.791201, 24.170052, 24.583564, 25.022156, 25.445649, 25.910184, 26.350063, 26.822649, 27.306609, 27.732251, 28.237878, 28.676496, 29.215355, 29.671082, 30.254687, 30.730227, 31.313155, 31.792825, 32.397932, 33.028258, 33.673742, 34.307052, 34.755805, 35.401802, 36.017190, 36.620787, 37.241529, 37.858404, 38.418848, 38.988973]# stem baseline from paper
BPG420, = plt.plot(bpp, psnr, '--o', color="m", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='$\mathrm{BPG}$')

# bpp = [0.023857, 0.028540, 0.034282, 0.041183, 0.049301, 0.058861, 0.070444, 0.084175, 0.100255, 0.119211, 0.140076, 0.165529, 0.193939, 0.226882, 0.264902, 0.308004, 0.353821, 0.406663, 0.465174, 0.528513, 0.602615, 0.681227, 0.763150, 0.855122, 0.954195, 1.058729, 1.178031, 1.302895, 1.427853]
# psnr = [23.787652, 24.169736, 24.583862, 25.005823, 25.441511, 25.892665, 26.341951, 26.815071, 27.298468, 27.803390, 28.299163, 28.836366, 29.370955, 29.927924, 30.519758, 31.114314, 31.707365, 32.333445, 32.953625, 33.589638, 34.260077, 34.921675, 35.560822, 36.239184, 36.892823, 37.539114, 38.225035, 38.892220, 39.508856]
# BPG444, = plt.plot(bpp, psnr, '--*', color="m", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='BPG444')
# j2k-opj5

bpp = [0.099912, 0.200165, 0.249945, 0.300170, 0.400012, 0.499803, 0.599782, 0.700121, 0.750070, 0.799270, 0.899998, 0.999610, 1.100226, 1.200713, 1.249957, 1.300304, 1.400688]
psnr = [25.982922, 28.086964, 28.857731, 29.547604, 30.704949, 31.693025, 32.555796, 33.346483, 33.700536, 34.032933, 34.667195, 35.272757, 35.842500, 36.345132, 36.583754, 36.822312, 37.281795]
j2k, = plt.plot(bpp, psnr, '--o', color="g", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='$\mathrm{JPEG2000}$')


bpp = [0.163492 , 0.195346 , 0.227208 , 0.259067 , 0.290908 , 0.322767 , 0.354617 , 0.386467 , 0.418333 , 0.450183 , 0.482038 , 0.513892 , 0.545742 , 0.577596 , 0.609458 , 0.641300 , 0.673167 , 0.705025 , 0.736879 , 0.768729 , 0.800592 , 0.832450 , 0.864283 , 0.896142 , 0.927996 , 0.959858 , 0.991708 , 1.023558 , 1.055413 , 1.087275 , 1.119117 , 1.150967 , 1.182833 , 1.214687 , 1.246542 , 1.278396 , 1.310250 , 1.342096 , 1.373954 , 1.405808 , 1.437675 , 1.469521 , 1.501379]
psnr = [25.095287, 25.850467, 26.581908, 27.236700, 27.829408, 28.394379, 28.867800, 29.311792, 29.739263, 30.158100, 30.560975, 30.914454, 31.246446, 31.571771, 31.888717, 32.197033, 32.489279, 32.761142, 33.018262, 33.268250, 33.511442, 33.748063, 33.980308, 34.208479, 34.434375, 34.650942, 34.859417, 35.047200, 35.225650, 35.395750, 35.562625, 35.727633, 35.888129, 36.047175, 36.211650, 36.381350, 36.552733, 36.724104, 36.892663, 37.057079, 37.210517, 37.361096, 37.508554]
theis2017iclr, = plt.plot(bpp, psnr, '--*', color="peru", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label="文献$\mathrm{[11]}$")

# bpp = [0.115239, 0.185698, 0.301804, 0.468972, 0.686378, 0.966864, 1.307441, 1.727503]
# psnr = [ 27.106351, 28.679134, 30.616753, 32.554935, 34.580960, 36.720366, 38.807960, 40.79492]
# balleiclr2018, = plt.plot(bpp, psnr, '--o', color="orange", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='balleiclr2018')
# bpp = [0.116419 , 0.172233 , 0.289868 , 0.455688 , 0.664587 , 0.934780 , 1.272558 , 1.692898]
# psnr = [27.869507, 28.844869, 31.025364, 33.049656, 34.991868, 36.993942, 39.038383, 40.948441]
# mshyper, = plt.plot(bpp, psnr, '--o', color="b", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='mshyper')

# bpp = [0.098400 ,0.098502 ,0.123147 ,0.216631 ,0.216733 ,0.233175 ,0.243297 ,0.266381 ,0.316397 ,0.342072 ,0.359053 ,0.366377 ,0.369731 ,0.416378 ,0.466340 ,0.467073 ,0.482969 ,0.494033 ,0.514605 ,0.564585 ,0.590295 ,0.608254 ,0.614593 ,0.619498 ,0.664594 ,0.714583 ,0.715288 ,0.732207 ,0.743663 ,0.763244 ,0.813254 ,0.838921 ,0.857497 ,0.863241 ,0.869088 ,0.913244 ,0.963240 ,0.963946 ,0.982247 ,0.994077 ,1.012682 ,1.062672 ,1.088370 ,1.107454 ,1.112645 ]
# psnr = [25.042694,25.042694,25.873829,27.263388,27.263388,27.744344,27.921630,28.221591,28.994437,29.224412,29.352130,29.404068,29.430324,30.037679,30.367370,30.371583,30.452516,30.510900,30.598548,31.228484,31.341569,31.408429,31.430022,31.444564,31.979668,32.151746,32.154511,32.212912,32.242123,32.287842,33.077149,33.178326,33.239064,33.257011,33.275594,33.666788,33.824353,33.826372,33.891988,33.925309,33.971809,34.365477,34.431439,34.477619,34.490851]
# johnson2017cvpr, = plt.plot(bpp, psnr, '--', color="orange", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label="johnson等人的方案")

bpp = [0.1, 0.15, 0.275, 0.44, 0.625, 0.89, 1.225] #MAE
psnr = [25.25, 26.6, 28.5, 30.55, 32.3, 34.15, 35.7]
bpp = [0.11,0.275,0.585,1.07] #MAE(hyperprior)
psnr = [26.05,29.4,33.25,36.4]
yangfei2020, = plt.plot(bpp, psnr, '--o', color="orange", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='文献$\mathrm{[22]}$')

bpp = [0.913, 0.735, 0.41, 0.332, 0.184, 0.078, ]
psnr = [36.461, 35.235, 32.281, 31.454, 29.137, 26.476, ]
proposed_single_rate, = plt.plot(bpp, psnr, '--o', color="red", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='单一码率图像压缩算法')

bpp = [0.844, 0.828, 0.814, 0.8, 0.787, 0.777, 0.764, 0.745, 0.724, 0.709, 0.695, 0.684, 0.672, 0.661, 0.651, 0.64, 0.63, 0.619, 0.607, 0.595, 0.584, 0.566, 0.548, 0.531, 0.513, 0.496, 0.48, 0.464, 0.449, 0.433, 0.417, 0.402, 0.387, 0.373, 0.359, 0.345, 0.332, 0.319, 0.305, 0.293, 0.281, 0.272, 0.264, 0.255, 0.248, 0.24, 0.232, 0.225, 0.217, 0.21, 0.203, 0.183, 0.169, 0.157, 0.145, 0.135, 0.125, 0.117, 0.108, 0.1, 0.093, 0.078, 0.072, 0.068, 0.064, 0.06, 0.055, 0.05, 0.046, 0.042, 0.039, ]
psnr = [35.502, 35.43, 35.355, 35.278, 35.201, 35.118, 35.034, 34.948, 34.848, 34.735, 34.654, 34.583, 34.513, 34.439, 34.365, 34.286, 34.206, 34.127, 34.036, 33.934, 33.836, 33.688, 33.532, 33.377, 33.215, 33.051, 32.881, 32.704, 32.532, 32.383, 32.229, 32.045, 31.86, 31.67, 31.489, 31.305, 31.121, 30.944, 30.771, 30.6, 30.435, 30.284, 30.135, 29.996, 29.859, 29.726, 29.599, 29.475, 29.352, 29.234, 29.111, 28.665, 28.361, 28.088, 27.848, 27.631, 27.428, 27.236, 27.05, 26.856, 26.66, 25.98, 25.741, 25.561, 25.399, 25.24, 25.091, 24.934, 24.79, 24.64, 24.494, ]
cgain, = plt.plot(bpp, psnr, '-s', color="k", linewidth=LineWidth-1, markersize=MarkerSize-2, fillstyle='none', label='$\mathrm{3.2}$节所提出的算法')

# bpp = [0.016, 0.019, 0.029, 0.03, 0.037, 0.047, 0.059, 0.065, 0.071, 0.076, 0.08, 0.098, 0.105, 0.112, 0.121, 0.137, 0.162, 0.176, 0.181, 0.192, 0.225, 0.242, 0.242, 0.25, 0.288, 0.295, 0.299, 0.333, 0.375, 0.381, 0.428, 0.491, 0.504, 0.518, 0.518, 0.639, 0.676, 0.677, 0.707, 0.793, 0.915, 0.932, 0.947]
# psnr = [22.477, 22.832, 23.788, 23.993, 24.506, 24.985, 25.764, 25.907, 26.131, 26.471, 26.671, 27.025, 27.437, 27.473, 27.951, 28.132, 28.837, 28.898, 29.283, 29.3, 30.046, 30.292, 30.064, 30.138, 30.953, 30.958, 31.111, 31.441, 31.906, 32.071, 32.626, 33.265, 33.342, 33.501, 33.437, 34.456, 34.815, 34.78, 35.038, 35.549, 36.2, 36.287, 36.272]
bpp = [0.037,0.059,0.08,0.105,0.121,0.162,0.181,0.225,0.242,0.288,0.299,0.381,0.428,0.428,0.518,0.639,0.676,0.793,0.932,1.07,1.17,1.248,1.325,1.522]
psnr = [24.506,25.764,26.671,27.437,27.951,28.837,29.283,30.046,30.292,30.953,31.111,32.071,32.626,32.626,33.501,34.456,34.815,35.549,36.287,36.815,37.138,37.306,37.503,37.821]
scgain, = plt.plot(bpp, psnr, '-s', color="b", linewidth=LineWidth-1, markersize=MarkerSize-2, fillstyle='none', label='$\mathrm{3.3}$节所提出的算法')



# psnr = [33.480, 34.864, 36.338, 37.607, 38.488]
# bpp = [0.041, 0.056, 0.082, 0.130, 0.208]
# STEM_ROI_scGain, = plt.plot(bpp, psnr, '-o', color="b", linewidth=LineWidth-1, markersize=MarkerSize-1, fillstyle='none', label='STEM_ROI_scGain_epoch42')

plt.xlim((0, 1.2))
plt.ylim((24, 38))

savepathpsnr = prefix
print(prefix)
if not os.path.exists(prefix):
    os.makedirs(prefix)
# plt.legend(handles=[STEM_ROI_SingleRate_Baseline, STEM_ROI_SingleRate_Baseline_paper, dcvc_plus], bbox_to_anchor=(1.05, 0), loc=3, borderaxespad=0)
# plt.legend(handles=[BPG420, j2k, theis2017iclr, yangfei2020, proposed_single_rate, cgain, scgain], bbox_to_anchor=(1.05, 0), loc=3, borderaxespad=0)
plt.legend(handles=[BPG420, j2k, theis2017iclr, yangfei2020, proposed_single_rate, cgain, scgain], loc=4, prop={'size': 10.5})
plt.grid()
plt.xlabel('编码速率$\mathrm{(bits \; per \; pixel)}$', fontsize=10.5)
plt.ylabel('PSNR(dB)', fontproperties='Times New Roman', fontsize=10.5)
plt.xticks(fontfamily="Times New Roman")
plt.yticks(fontfamily="Times New Roman")
plt.title('$\mathrm{Kodak}$数据集', fontsize=10.5)
plt.savefig(savepathpsnr + '.png', dpi=300, bbox_inches='tight')
plt.clf()